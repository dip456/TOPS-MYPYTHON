City table : 
CREATE TABLE city ( id INT PRIMARY KEY,city_name VARCHAR(255),lat DOUBLE,`long` DOUBLE,country_id INT, FOREIGN KEY (country_id) REFERENCES country(id));

insert into city values(1,'Berlin',52.520008,13.404954,1),
(2,'Belgrade',44.787197,20.457273,2),
(3,'Zagreb',45.815399,15.966568,3),
(4,'Ney York',40.730610,-73.935242,4),
(5,'los Angeles',34.052235,-118.243683,4),
(6,'Warsaw',52.237049,21.017532,5);

Customer table:
CREATE TABLE customer (id INT PRIMARY KEY,customer_name VARCHAR(255),city_id INT,customer_address VARCHAR(255),next_call_date DATE,
ts_inserted TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (city_id) REFERENCES city(id));


Country table :
create table country(id int, country_name varchar(150),country_eng varchar(100),country_code varchar(100));
insert into country values(1,Deutschland,Germany,DEU),
s (2,'Serbia','Serbia','SRB'),
(3,'Hrvatska','Croatia','HRV'),
(4,'united State America','United state','USA'),
(5,'polska','Poland','POL'),
(6,'Espana','spain','ESP'),
(7,'Rossiya','Russiya','RUS');


Task : 1 (join multiple tables using left join)
SELECT customer.id AS customer_id,customer.customer_name,city.id AS city_id,city.city_name,country.id AS country_id,country.country_name
    -> FROM customer
    -> LEFT JOIN city ON customer.city_id = city.id
    -> LEFT JOIN country ON city.country_id = country.id;

List all Countries and customers related to these countries.
SELECTcountry.id AS country_id,country.country_name,customer.id AS customer_id,customer.customer_name
    -> FROM country
    -> LEFT JOIN city ON country.id = city.country_id
    -> LEFT JOIN customer ON city.id = customer.city_id;

For each country displaying its name in English, the name of the city customer is located in as well as the name of the customer.
SELECT
    ->     country.country_name AS country_name,city.city_name,customer.customer_name
    -> FROM customer
    -> LEFT JOIN city ON customer.city_id = city.id
    -> LEFT JOIN country ON city.country_id = country.id;


Task : 2 (join multiple tables using both left and inner join)
SELECT
    ->     country.country_name AS country_name,city.city_name,customer.customer_name
    -> FROM country
    -> LEFT JOIN city ON country.id = city.country_id
    -> INNER JOIN customer ON city.id = customer.city_id;


    Return the list of all countries that have pairs(exclude countries which are not referenced by any city). For such pairs return all customers.
SELECT 
    country.country_name AS country_name,
    city.city_name,
    customer.customer_name
FROM 
    country
INNER JOIN 
    city ON country.id = city.country_id
INNER JOIN 
    customer ON city.id = customer.city_id;


Return even pairs of not having a single customer
SELECT country.country_name AS country_name,city.city_name,customer.customer_name
    -> FROM country
    -> LEFT JOIN city ON country.id = city.country_id
    -> LEFT JOIN customer ON city.id = customer.city_id;


